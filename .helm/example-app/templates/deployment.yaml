apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-app
  labels:
    app: "{{ .Values.name }}"
    service: example-app
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Values.name }}"
      service: example-app
      release: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: "{{ .Values.name }}"
        service: example-app
        release: {{ .Release.Name }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    service: example-app
                    revision: "{{ .Release.Revision }}"
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: example-app
          image: "{{ .Values.deployment.image }}"
          imagePullPolicy: {{ .Values.deployment.pullPolicy }}
          resources:
            requests:
              cpu: "1000m"
              memory: 1500Mi
            limits:
              cpu: "1000m"
              memory: 1500Mi
          ports:
          - name: http
            containerPort: 8000


---
apiVersion: v1
kind: Service
metadata:
  name: example-app
  labels:
    app: "{{ .Values.name }}"
    service: example-app
    release: {{ .Release.Name }}

spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
  selector:
    app: "{{ .Values.name }}"
    service: example-app
    release: {{ .Release.Name }}
